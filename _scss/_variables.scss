// Helper mixins, functions, and global variables


@mixin sans-serif-font {
  font-family: 'Open Sans', 'Arial', 'sans serif';
}

@mixin serif-font {
  font-family: "Droid Serif", "serif";
}

/////////
// Colour sets
/////////
$white: #ffffff;
$white-ish: #efefef;

$lighter-gray: #fafafa;
$light-gray: #f2f2f2;
$medium-gray: #e5e5e5;
$dark-gray: #404040;

$royal-purple: #4c4d96;
$royal-purple-darker: #434485;

$blue: #0490E5;
$un-blue: #53a7ea;

//////////
// UI Colors
//////////
$text-color: $dark-gray;

$text-hover-color: $white-ish;
$text-hover-bg-color: $royal-purple;
$text-hover-border-color: $royal-purple-darker;

$info-button-bg-color: $white;

$link-color: $blue;

$menu-color: $dark-gray;
$menu-bg-color: $lighter-gray;
$menu-border-color: $medium-gray;

$body-bg-color: $light-gray;

$animation-compliment: $un-blue;

// Modified color set
// $menu-border-color: #CdD3D7;
// $menu-color: #94AaAb;
$menu-bg-color: #fff;
$text-color: #000;
$text-hover-color: #fff;
$info-button-bg-color: $white;

// Modified animation compliment
$animation-compliment: #898BE2;
// $animation-compliment: #7374E2;

///////////////////////////////////////////////
//                                           //
// The following set of mixins and functions //
// are dedicated to browser prefixes         //
//                                           //
///////////////////////////////////////////////


////////////////////////////
// Media size breakpoints //
////////////////////////////
@mixin media-size($point) {
  @if $point == large {
    @media only screen and (min-width: 769px) { @content; }
  }
  @else if $point == small {
    @media only screen and (max-width: 768px) {@content; }
  }
}



//////////////////////////////
// Vendor prefix properties //
//////////////////////////////
@mixin vendor-prefix($name, $argument, $prefixes: (webkit moz o ms)) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$name}: #{$argument};
  }
  #{$name}: #{$argument};
}

/////////////////////////////
// Vendor prefix keyframes //
/////////////////////////////
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

///////////////////////////////////
// Vendor Prefixing Transistions //
///////////////////////////////////
// source: https://gist.github.com/vieron/6045967#file-transitions-scss

@function prefix($property, $prefixes: (webkit moz o ms)) {
    $vendor-prefixed-properties: transform background-clip background-size;
    $result: ();
    @each $prefix in $prefixes {
       @if index($vendor-prefixed-properties, $property) {
         $property: -#{$prefix}-#{$property}
       }
       $result: append($result, $property);
    }
    @return $result;
}

@function trans-prefix($transition, $prefix: moz) {
    $prefixed: ();
    @each $trans in $transition {
        $prop-name: nth($trans, 1);
        $vendor-prop-name: prefix($prop-name, $prefix);
        $prop-vals: nth($trans, 2);
        $prefixed: append($prefixed, ($vendor-prop-name $prop-vals), comma);
    }
    @return $prefixed;
}

@mixin transition($values...) {
    $transitions: ();
    @each $declaration in $values {
        $prop: nth($declaration, 1);
        $prop-opts: ();
        $length: length($declaration);
        @for $i from 2 through $length {
            $prop-opts: append($prop-opts, nth($declaration, $i));
        }
        $trans: ($prop, $prop-opts);
        $transitions: append($transitions, $trans, comma);
    }
    -webkit-transition: trans-prefix($transitions, webkit);
    -moz-transition: trans-prefix($transitions, moz);
    -o-transition: trans-prefix($transitions, o);
    transition: $values;
}
